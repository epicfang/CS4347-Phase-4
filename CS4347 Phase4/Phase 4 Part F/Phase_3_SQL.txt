CREATE TABLE PERSON (
  PERSON_ID VARCHAR(5) PRIMARY KEY CHECK (REGEXP_LIKE(PERSON_ID, '^P-[0-9]{3}$')),
  DATE_OF_BIRTH date,
  GENDER varchar(10),
  FIRST_NAME varchar(255),
  LAST_NAME varchar(255),
  MIDDLE_NAME varchar(255)
);
CREATE TABLE PERSON_EMAIL_ADDRESS (
  PERSON_ID varchar(5),
  EMAIL_ADDRESS varchar(255),
  PRIMARY KEY (PERSON_ID, EMAIL_ADDRESS),
  FOREIGN KEY (PERSON_ID) REFERENCES PERSON(PERSON_ID)
);
CREATE TABLE PERSON_PHONE_NUMBER (
  PERSON_ID varchar(5),
  PHONE_NUMBER varchar(20),
  PRIMARY KEY (PERSON_ID, PHONE_NUMBER),
  FOREIGN KEY (PERSON_ID) REFERENCES PERSON(PERSON_ID)
);
CREATE TABLE PERSON_LOCATION (
  PERSON_ID varchar(5),
  STATE varchar(255),
  STREET varchar(255),
  CITY varchar(255),
  ZIP varchar(10),
  PRIMARY KEY (PERSON_ID),
  FOREIGN KEY (PERSON_ID) REFERENCES PERSON(PERSON_ID)
);

CREATE TABLE HEALTHCARE_PROFESSIONAL (
    EMPLOYEE_ID VARCHAR(8) PRIMARY KEY CHECK (REGEXP_LIKE(EMPLOYEE_ID, '^EMP-[0-9]{3}$')),
    PERSON_ID VARCHAR(5) UNIQUE, 
    SPECIALIZATION VARCHAR(100),
    DEPARTMENT VARCHAR(100),
	HIRE_DATE DATE,
    YEARS_OF_EXPERIENCE INT CHECK (YEARS_OF_EXPERIENCE >= 0),
    WORKING_HOURS INT CHECK (WORKING_HOURS >= 0),
    CONSTRAINT CHK_PERSON_ID CHECK (REGEXP_LIKE(PERSON_ID, '^P-[0-9]{3}$')),
    CONSTRAINT FK_PERSON_ID FOREIGN KEY (PERSON_ID) REFERENCES PERSON(PERSON_ID)
);

CREATE TABLE DOCTOR (
    DOCTOR_ID VARCHAR(7) PRIMARY KEY CHECK (REGEXP_LIKE(DOCTOR_ID, '^DO-[0-9]{3}$')),
    EMPLOYEE_ID VARCHAR(8),
    CONSTRAINT CHK_EMPLOYEE_ID CHECK (REGEXP_LIKE(EMPLOYEE_ID, '^EMP-[0-9]{3}$')),
    CONSTRAINT FK_EMPLOYEE_ID FOREIGN KEY (EMPLOYEE_ID) REFERENCES HEALTHCARE_PROFESSIONAL(EMPLOYEE_ID)
);

CREATE TABLE NURSE (
    NURSE_ID VARCHAR(7) PRIMARY KEY CHECK (REGEXP_LIKE(NURSE_ID, '^NU-[0-9]{3}$')),
    EMPLOYEE_ID VARCHAR(8),
    CONSTRAINT CHK_EMPLOYEE_ID_NURSE CHECK (REGEXP_LIKE(EMPLOYEE_ID, '^EMP-[0-9]{3}$')),
    CONSTRAINT FK_EMPLOYEE_ID_NURSE FOREIGN KEY (EMPLOYEE_ID) REFERENCES HEALTHCARE_PROFESSIONAL(EMPLOYEE_ID)
);

CREATE TABLE TECHNICIAN (
    TECHNICIAN_ID VARCHAR(7) PRIMARY KEY CHECK (REGEXP_LIKE(TECHNICIAN_ID, '^TEC-[0-9]{3}$')),
    EMPLOYEE_ID VARCHAR(8),
    CONSTRAINT CHK_EMPLOYEE_ID_TECH CHECK (REGEXP_LIKE(EMPLOYEE_ID, '^EMP-[0-9]{3}$')),
    CONSTRAINT FK_EMPLOYEE_ID_TECH FOREIGN KEY (EMPLOYEE_ID) REFERENCES HEALTHCARE_PROFESSIONAL(EMPLOYEE_ID)
);

CREATE TABLE ADMINISTRATIVESTAFF (
    ADMIN_ID VARCHAR(7) PRIMARY KEY CHECK (REGEXP_LIKE(ADMIN_ID, '^AD-[0-9]{3}$')),
    DOCTOR_ID VARCHAR(7),
    CONSTRAINT CHK_DOCTOR_ID CHECK (REGEXP_LIKE(DOCTOR_ID, '^DO-[0-9]{3}$')),
    CONSTRAINT FK_DOCTOR_ID_ADMIN FOREIGN KEY (DOCTOR_ID) REFERENCES DOCTOR(DOCTOR_ID)
);

CREATE OR REPLACE TRIGGER check_age_before_insert
BEFORE INSERT ON HEALTHCARE_PROFESSIONAL
FOR EACH ROW
DECLARE
	person_dob DATE;
	person_age NUMBER(3);
BEGIN
	SELECT DATE_OF_BIRTH INTO person_dob FROM PERSON WHERE PERSON_ID = :NEW.PERSON_ID;
	person_age := FLOOR(MONTHS_BETWEEN(SYSDATE, person_dob) / 12);
	IF person_age < 18 THEN
    	RAISE_APPLICATION_ERROR(-20001, 'The person must be at least 18 years old.');
	END IF;
END;
/


  CREATE TABLE PATIENT (
  PATIENT_ID VARCHAR2(10) PRIMARY KEY,
  EMPLOYEE_ID VARCHAR2(8),
  PERSON_ID VARCHAR(5),
  ENROLLMENT_DATE DATE,
  CONSTRAINT FK_PERSON_ID2 FOREIGN KEY (PERSON_ID) REFERENCES PERSON(PERSON_ID),
  CONSTRAINT CHK_PATIENT_ID_FORMAT CHECK (REGEXP_LIKE(PATIENT_ID, '^PT-[0-9]{5}$')),
  CONSTRAINT CHK_PERSON_ID_FORMAT CHECK (REGEXP_LIKE(PERSON_ID, '^P-[0-9]{3}$')),
  CONSTRAINT CHK_EMPLOYEE_ID_FORMAT CHECK (EMPLOYEE_ID IS NULL OR REGEXP_LIKE(EMPLOYEE_ID, '^EMP-[0-9]{3}$')),
  CONSTRAINT FK_EMPLOYEE_ID2 FOREIGN KEY (EMPLOYEE_ID) REFERENCES HEALTHCARE_PROFESSIONAL(EMPLOYEE_ID) ON DELETE SET NULL
);

CREATE TABLE PHARMACY (
  PHARMACY_ID VARCHAR(10) PRIMARY KEY,
  NAME VARCHAR(100),
  LOCATION VARCHAR(255),
  CONTACT_INFORMATION VARCHAR(255),
  CONSTRAINT CHK_PHARMACY_ID_FORMAT CHECK (REGEXP_LIKE(PHARMACY_ID, '^PH-[0-9]{3}$'))
);

CREATE TABLE BILL (
  BILLING_ID VARCHAR2(5) PRIMARY KEY CHECK (REGEXP_LIKE(BILLING_ID, '^B-[0-9]{3}$')),
  BILL_DATE DATE,
  ITEMIZED_COSTS CLOB,
  TOTAL_COST NUMBER(10, 2),
  PAYMENT_METHOD VARCHAR(50),
  PATIENT_ID VARCHAR2(10),
  CONSTRAINT FK_PATIENT_ID FOREIGN KEY (PATIENT_ID) REFERENCES PATIENT(PATIENT_ID),
  CONSTRAINT CHK_BILL_ID CHECK (REGEXP_LIKE(PATIENT_ID, '^PT-[0-9]{5}$'))
);

CREATE TABLE APPOINTMENT (
 APPOINTMENT_ID VARCHAR2(5) PRIMARY KEY CHECK (REGEXP_LIKE(APPOINTMENT_ID, '^A-[0-9]{3}$')),
  APPOINTMENT_DATE DATE,
  PURPOSE CLOB,
  APPOINTMENT_TIME TIMESTAMP,
  PATIENT_ID VARCHAR2(10),
  EMPLOYEE_ID VARCHAR2(8),
  CONSTRAINT FK_APPOINTMENT_PATIENT_ID FOREIGN KEY (PATIENT_ID) REFERENCES PATIENT(PATIENT_ID),
  CONSTRAINT FK_APPOINTMENT_EMPLOYEE_ID FOREIGN KEY (EMPLOYEE_ID) REFERENCES HEALTHCARE_PROFESSIONAL(EMPLOYEE_ID),
CONSTRAINT CHK_APPOINTMENT_PID CHECK (REGEXP_LIKE(PATIENT_ID, '^PT-[0-9]{5}$')),
  CONSTRAINT CHK_APPOINTMENT_EID CHECK (REGEXP_LIKE(EMPLOYEE_ID, '^EMP-[0-9]{3}$'))
);

CREATE TABLE MEDICAL_RECORD (
  RECORD_ID VARCHAR(7) PRIMARY KEY,
  PATIENT_ID VARCHAR(10),
  HEALTHCARE_PROFESSIONAL_ID VARCHAR(8),
  DIAGNOSIS CLOB,
  TREATMENT_HISTORY CLOB,
  ALLERGIES CLOB,
  CURRENT_MEDICATIONS CLOB,
  LAB_RESULTS CLOB,
  CONSTRAINT CHK_RECORD_ID3 CHECK (REGEXP_LIKE(RECORD_ID, '^R-[0-9]{5}$')),
  CONSTRAINT CHK_PATIENT_ID2 CHECK (REGEXP_LIKE(PATIENT_ID, '^PT-[0-9]{5}$')),
  CONSTRAINT CHK_HEALTHCARE_PROFESSIONAL_ID2 CHECK (REGEXP_LIKE(HEALTHCARE_PROFESSIONAL_ID, '^EMP-[0-9]{3}$')),
  CONSTRAINT FK_PATIENT_ID_MEDICAL_RECORD FOREIGN KEY (PATIENT_ID) REFERENCES PATIENT(PATIENT_ID),
  CONSTRAINT FK_HEALTHCARE_PROFESSIONAL_ID_MEDICAL_RECORD FOREIGN KEY (HEALTHCARE_PROFESSIONAL_ID) REFERENCES HEALTHCARE_PROFESSIONAL(EMPLOYEE_ID)
);

CREATE TABLE TREATMENT (
    TREATMENT_ID VARCHAR2(5) PRIMARY KEY CHECK (REGEXP_LIKE(TREATMENT_ID, '^T-[0-9]{3}$')),
    START_DATE DATE,
    END_DATE DATE,
    DESCRIPTION CLOB,
    OUTCOME CLOB,
    PATIENT_ID VARCHAR2(8) CONSTRAINT CHK_PATIENT_ID_FORMAT2 CHECK (REGEXP_LIKE(PATIENT_ID, '^PT-[0-9]{5}$')),
    PHARMACY_ID VARCHAR2(6) CONSTRAINT CHK_PHARMACY_ID_FORMAT2 CHECK (REGEXP_LIKE(PHARMACY_ID, '^PH-[0-9]{3}$')),
    HEALTHCARE_PROFESSIONAL_ID VARCHAR2(8) CONSTRAINT CHK_HEALTHCARE_PROF_ID_FORMAT CHECK (REGEXP_LIKE(HEALTHCARE_PROFESSIONAL_ID, '^EMP-[0-9]{3}$')),
    FOREIGN KEY (HEALTHCARE_PROFESSIONAL_ID) REFERENCES HEALTHCARE_PROFESSIONAL(EMPLOYEE_ID),
    FOREIGN KEY (PATIENT_ID) REFERENCES PATIENT(PATIENT_ID),
    FOREIGN KEY (PHARMACY_ID) REFERENCES PHARMACY(PHARMACY_ID)
);

CREATE TABLE INSURANCE (
    INSURANCE_ID VARCHAR(7) PRIMARY KEY,
    COMPANY_NAME VARCHAR(255),
    BILL_AMOUNT NUMBER(10, 2)
);

INSERT INTO PERSON (PERSON_ID, DATE_OF_BIRTH, GENDER, FIRST_NAME, LAST_NAME, MIDDLE_NAME)
SELECT 'P-001', TO_DATE('2003-01-17', 'YYYY-MM-DD'), 'Male', 'Ethan', 'Seem', 'MiddleName' FROM DUAL UNION ALL
SELECT 'P-002', TO_DATE('2004-07-23', 'YYYY-MM-DD'), 'Male', 'John', 'Doe', 'MiddleGuy' FROM DUAL UNION ALL
SELECT 'P-003', TO_DATE('1998-09-27', 'YYYY-MM-DD'), 'Female', 'Jane', 'Everylady', 'Doe' FROM DUAL UNION ALL
SELECT 'P-004', TO_DATE('2002-03-04', 'YYYY-MM-DD'), 'Female', 'Stephanie', 'Si', NULL FROM DUAL UNION ALL
SELECT 'P-005', TO_DATE('2001-12-25', 'YYYY-MM-DD'), 'Male', 'Steve', 'Everyman', 'Superguy' FROM DUAL UNION ALL
SELECT 'P-006', TO_DATE('2000-02-12', 'YYYY-MM-DD'), 'Female', 'Emily', 'Johnson', 'MiddleName' FROM DUAL UNION ALL
SELECT 'P-007', TO_DATE('1999-05-19', 'YYYY-MM-DD'), 'Male', 'Michael', 'Smith', 'MiddleGuy' FROM DUAL UNION ALL
SELECT 'P-008', TO_DATE('2001-08-23', 'YYYY-MM-DD'), 'Female', 'Sarah', 'Williams', 'Doe' FROM DUAL UNION ALL
SELECT 'P-009', TO_DATE('2002-11-30', 'YYYY-MM-DD'), 'Male', 'David', 'Brown', NULL FROM DUAL UNION ALL
SELECT 'P-010', TO_DATE('2003-04-15', 'YYYY-MM-DD'), 'Female', 'Jessica', 'Jones', 'Supergirl' FROM DUAL UNION ALL
SELECT 'P-011', TO_DATE('2004-07-01', 'YYYY-MM-DD'), 'Male', 'Robert', 'Miller', 'MiddleName' FROM DUAL UNION ALL
SELECT 'P-012', TO_DATE('2005-10-17', 'YYYY-MM-DD'), 'Female', 'Jennifer', 'Davis', 'MiddleGal' FROM DUAL UNION ALL
SELECT 'P-013', TO_DATE('2006-01-23', 'YYYY-MM-DD'), 'Male', 'James', 'Garcia', 'Doe' FROM DUAL UNION ALL
SELECT 'P-014', TO_DATE('2007-04-29', 'YYYY-MM-DD'), 'Female', 'Linda', 'Martinez', NULL FROM DUAL UNION ALL
SELECT 'P-015', TO_DATE('2008-08-05', 'YYYY-MM-DD'), 'Male', 'William', 'Rodriguez', 'Superman' FROM DUAL UNION ALL
SELECT 'P-016', TO_DATE('2009-11-11', 'YYYY-MM-DD'), 'Female', 'Elizabeth', 'Wilson', 'MiddleName' FROM DUAL UNION ALL
SELECT 'P-017', TO_DATE('2010-02-17', 'YYYY-MM-DD'), 'Male', 'Richard', 'Anderson', 'MiddleGuy' FROM DUAL UNION ALL
SELECT 'P-018', TO_DATE('2011-05-25', 'YYYY-MM-DD'), 'Female', 'Patricia', 'Taylor', 'Doe' FROM DUAL UNION ALL
SELECT 'P-019', TO_DATE('2012-08-31', 'YYYY-MM-DD'), 'Male', 'Thomas', 'Thomas', NULL FROM DUAL UNION ALL
SELECT 'P-020', TO_DATE('2013-12-07', 'YYYY-MM-DD'), 'Female', 'Susan', 'Moore', 'Supergirl' FROM DUAL UNION ALL
SELECT 'P-021', TO_DATE('1990-01-01', 'YYYY-MM-DD'), 'Male', 'John', 'Doe', 'A' FROM DUAL UNION ALL
SELECT 'P-022', TO_DATE('1995-01-01', 'YYYY-MM-DD'), 'Female', 'Jane', 'Doe', 'B' FROM DUAL UNION ALL
SELECT 'P-023', TO_DATE('1987-05-01', 'YYYY-MM-DD'), 'Male', 'Sick', 'Mcsicky', NULL FROM DUAL; 

INSERT INTO PERSON_EMAIL_ADDRESS (PERSON_ID, EMAIL_ADDRESS)
SELECT 'P-001', 'etseem@gmail.com' FROM DUAL UNION ALL
SELECT 'P-002', 'JDM@gmail.com' FROM DUAL UNION ALL
SELECT 'P-003', 'JED@gmail.com' FROM DUAL UNION ALL
SELECT 'P-004', 'SSi@gmail.com' FROM DUAL UNION ALL
SELECT 'P-005', 'SES@gmail.com' FROM DUAL UNION ALL
SELECT 'P-006', 'emjohnson@gmail.com' FROM DUAL UNION ALL
SELECT 'P-007', 'mikesmith@gmail.com' FROM DUAL UNION ALL
SELECT 'P-008', 'sarahwilliams@gmail.com' FROM DUAL UNION ALL
SELECT 'P-009', 'davidbrown@gmail.com' FROM DUAL UNION ALL
SELECT 'P-010', 'jessicajones@gmail.com' FROM DUAL UNION ALL
SELECT 'P-011', 'robertmiller@gmail.com' FROM DUAL UNION ALL
SELECT 'P-012', 'jenniferdavis@gmail.com' FROM DUAL UNION ALL
SELECT 'P-013', 'jamesgarcia@gmail.com' FROM DUAL UNION ALL
SELECT 'P-014', 'lindamartinez@gmail.com' FROM DUAL UNION ALL
SELECT 'P-015', 'williamrodriguez@gmail.com' FROM DUAL UNION ALL
SELECT 'P-016', 'elizabethwilson@gmail.com' FROM DUAL UNION ALL
SELECT 'P-017', 'richardanderson@gmail.com' FROM DUAL UNION ALL
SELECT 'P-018', 'patriciataylor@gmail.com' FROM DUAL UNION ALL
SELECT 'P-019', 'thomasthomas@gmail.com' FROM DUAL UNION ALL
SELECT 'P-020', 'susanmoore@gmail.com' FROM DUAL;

INSERT INTO PERSON_PHONE_NUMBER (PERSON_ID, PHONE_NUMBER)
SELECT 'P-001', '469-328-5931' FROM DUAL UNION ALL
SELECT 'P-002', '410-479-0897' FROM DUAL UNION ALL
SELECT 'P-003', '472-292-7919' FROM DUAL UNION ALL
SELECT 'P-004', '224-781-3514' FROM DUAL UNION ALL
SELECT 'P-005', '228-370-4377' FROM DUAL UNION ALL
SELECT 'P-006', '469-328-5932' FROM DUAL UNION ALL
SELECT 'P-007', '410-479-0898' FROM DUAL UNION ALL
SELECT 'P-008', '472-292-7920' FROM DUAL UNION ALL
SELECT 'P-009', '224-781-3515' FROM DUAL UNION ALL
SELECT 'P-010', '228-370-4378' FROM DUAL UNION ALL
SELECT 'P-011', '469-328-5933' FROM DUAL UNION ALL
SELECT 'P-012', '410-479-0899' FROM DUAL UNION ALL
SELECT 'P-013', '472-292-7921' FROM DUAL UNION ALL
SELECT 'P-014', '224-781-3516' FROM DUAL UNION ALL
SELECT 'P-015', '228-370-4379' FROM DUAL UNION ALL
SELECT 'P-016', '469-328-5934' FROM DUAL UNION ALL
SELECT 'P-017', '410-479-0900' FROM DUAL UNION ALL
SELECT 'P-018', '472-292-7922' FROM DUAL UNION ALL
SELECT 'P-019', '224-781-3517' FROM DUAL UNION ALL
SELECT 'P-020', '228-370-4380' FROM DUAL;

INSERT INTO PERSON_LOCATION (PERSON_ID, STATE, STREET, CITY, ZIP)
SELECT 'P-001', 'Texas', '123 Coding St.', 'Plano', '75020' FROM DUAL UNION ALL
SELECT 'P-002', 'Texas', '1820 BlahBlah St.', 'Dallas', '75593' FROM DUAL UNION ALL
SELECT 'P-003', 'Texas', '6934 Vyrn Ct.', 'Richardson', '75864' FROM DUAL UNION ALL
SELECT 'P-004', 'Texas', '9638 Lyria Ave.', 'Waco', '75342' FROM DUAL UNION ALL
SELECT 'P-005', 'Texas', '1295 Grand Ln.', 'Austin', '75443' FROM DUAL UNION ALL
SELECT 'P-006', 'Texas', '1234 Coding St.', 'Plano', '75021' FROM DUAL UNION ALL
SELECT 'P-007', 'Texas', '1821 BlahBlah St.', 'Dallas', '75594' FROM DUAL UNION ALL
SELECT 'P-008', 'Texas', '6935 Vyrn Ct.', 'Richardson', '75865' FROM DUAL UNION ALL
SELECT 'P-009', 'Texas', '9639 Lyria Ave.', 'Waco', '75343' FROM DUAL UNION ALL
SELECT 'P-010', 'Texas', '1296 Grand Ln.', 'Austin', '75444' FROM DUAL UNION ALL
SELECT 'P-011', 'Texas', '1235 Coding St.', 'Plano', '75022' FROM DUAL UNION ALL
SELECT 'P-012', 'Texas', '1822 BlahBlah St.', 'Dallas', '75595' FROM DUAL UNION ALL
SELECT 'P-013', 'Texas', '6936 Vyrn Ct.', 'Richardson', '75866' FROM DUAL UNION ALL
SELECT 'P-014', 'Texas', '9640 Lyria Ave.', 'Waco', '75344' FROM DUAL UNION ALL
SELECT 'P-015', 'Texas', '1297 Grand Ln.', 'Austin', '75445' FROM DUAL UNION ALL
SELECT 'P-016', 'Texas', '1236 Coding St.', 'Plano', '75023' FROM DUAL UNION ALL
SELECT 'P-017', 'Texas', '1823 BlahBlah St.', 'Dallas', '75596' FROM DUAL UNION ALL
SELECT 'P-018', 'Texas', '6937 Vyrn Ct.', 'Richardson', '75867' FROM DUAL UNION ALL
SELECT 'P-019', 'Texas', '9641 Lyria Ave.', 'Waco', '75345' FROM DUAL UNION ALL
SELECT 'P-020', 'Texas', '1298 Grand Ln.', 'Austin', '75446' FROM DUAL;

INSERT INTO HEALTHCARE_PROFESSIONAL (EMPLOYEE_ID, PERSON_ID, SPECIALIZATION, DEPARTMENT, YEARS_OF_EXPERIENCE, WORKING_HOURS)
SELECT 'EMP-001', 'P-001', 'EKG Technician', 'Cardiology Department', 2, 40 FROM DUAL UNION ALL
SELECT 'EMP-002', 'P-002', 'X-ray Technician', 'Radiology Department', 3, 40 FROM DUAL UNION ALL
SELECT 'EMP-003', 'P-007', 'Lab Technician', 'Laboratory Department', 1, 40 FROM DUAL UNION ALL
SELECT 'EMP-004', 'P-008', 'Ultrasound Technician', 'Imaging Department', 2, 40 FROM DUAL UNION ALL
SELECT 'EMP-005', 'P-013', 'Lab Technician', 'Laboratory Department', 1, 40 FROM DUAL UNION ALL
SELECT 'EMP-006', 'P-003', 'Surgical Nurse', 'Surgery Department', 3, 36 FROM DUAL UNION ALL
SELECT 'EMP-007', 'P-004', 'Oncology Nurse', 'Oncology Department', 4, 36 FROM DUAL UNION ALL
SELECT 'EMP-008', 'P-010', 'Emergency Nurse', 'Emergency Department', 4, 36 FROM DUAL UNION ALL
SELECT 'EMP-009', 'P-011', 'Trauma Nurse', 'Surgery Department', 3, 36 FROM DUAL UNION ALL
SELECT 'EMP-010', 'P-012', 'Pediatric Nurse', 'Pediatrics Department', 5, 36 FROM DUAL UNION ALL
SELECT 'EMP-011', 'P-005', 'Orthopedic Surgeon', 'Orthopedics Department', 6, 40 FROM DUAL UNION ALL
SELECT 'EMP-012', 'P-006', 'Neurologist', 'Neurology Department', 6, 40 FROM DUAL UNION ALL
SELECT 'EMP-013', 'P-009', 'Radiologist', 'Radiology Department', 5, 40 FROM DUAL UNION ALL
SELECT 'EMP-014', 'P-021', 'Cardiologist', 'Cardiology Department', 3, 40 FROM DUAL UNION ALL
SELECT 'EMP-015', 'P-022', 'Emergency Medicine Physician', 'Emergency Department', 2, 40 FROM DUAL UNION ALL
SELECT 'EMP-016', 'P-023', 'Intern', 'Rehabilitation Department', 0, 7 FROM DUAL;

INSERT INTO DOCTOR (DOCTOR_ID, EMPLOYEE_ID)
SELECT 'DO-001', 'EMP-011' FROM DUAL UNION ALL
SELECT 'DO-002', 'EMP-012' FROM DUAL UNION ALL
SELECT 'DO-003', 'EMP-013' FROM DUAL UNION ALL
SELECT 'DO-004', 'EMP-014' FROM DUAL UNION ALL
SELECT 'DO-005', 'EMP-015' FROM DUAL;

INSERT INTO TECHNICIAN (TECHNICIAN_ID, EMPLOYEE_ID)
SELECT 'TEC-001', 'EMP-001' FROM DUAL UNION ALL
SELECT 'TEC-002', 'EMP-002' FROM DUAL UNION ALL
SELECT 'TEC-003', 'EMP-003' FROM DUAL UNION ALL
SELECT 'TEC-004', 'EMP-004' FROM DUAL UNION ALL
SELECT 'TEC-005', 'EMP-005' FROM DUAL;

INSERT INTO ADMINISTRATIVESTAFF (ADMIN_ID, DOCTOR_ID)
SELECT 'AD-001', 'DO-001' FROM DUAL UNION ALL
SELECT 'AD-002', 'DO-002' FROM DUAL UNION ALL
SELECT 'AD-003', 'DO-003' FROM DUAL UNION ALL
SELECT 'AD-004', 'DO-004' FROM DUAL UNION ALL
SELECT 'AD-005', 'DO-005' FROM DUAL;

INSERT INTO PHARMACY (PHARMACY_ID, NAME, LOCATION, CONTACT_INFORMATION)
SELECT 'PH-001', 'ABC Pharmacy', '123 Main Street', '123-456-7890' FROM DUAL UNION ALL
SELECT 'PH-002', 'XYZ Pharmacy', '456 Elm Street', '987-654-3210' FROM DUAL UNION ALL
SELECT 'PH-003', 'DEF Pharmacy', '789 Oak Avenue', '555-555-5555' FROM DUAL UNION ALL
SELECT 'PH-004', 'GHI Pharmacy', '321 Pine Street', '777-777-7777' FROM DUAL UNION ALL
SELECT 'PH-005', 'JKL Pharmacy', '987 Cedar Avenue', '888-888-8888' FROM DUAL;

INSERT INTO PATIENT (PATIENT_ID, EMPLOYEE_ID, PERSON_ID, ENROLLMENT_DATE)
SELECT 'PT-00001', NULL, 'P-014', DATE '2023-01-01' FROM DUAL UNION ALL
SELECT 'PT-00002', NULL, 'P-015', DATE '2023-02-01' FROM DUAL UNION ALL
SELECT 'PT-00003', NULL, 'P-016', DATE '2023-03-01' FROM DUAL UNION ALL
SELECT 'PT-00004', NULL, 'P-017', DATE '2023-04-01' FROM DUAL UNION ALL
SELECT 'PT-00005', NULL, 'P-018', DATE '2023-05-01' FROM DUAL UNION ALL
SELECT 'PT-00006', NULL, 'P-019', DATE '2023-06-01' FROM DUAL UNION ALL
SELECT 'PT-00007', NULL, 'P-020', DATE '2023-07-01' FROM DUAL UNION ALL
SELECT 'PT-00008', 'EMP-001', 'P-001', DATE '2023-08-01' FROM DUAL UNION ALL
SELECT 'PT-00009', 'EMP-006', 'P-003', DATE '2023-09-01' FROM DUAL UNION ALL
SELECT 'PT-00010', 'EMP-016', 'P-023', DATE '2024-4-16' FROM DUAL;

INSERT INTO MEDICAL_RECORD (RECORD_ID, PATIENT_ID, HEALTHCARE_PROFESSIONAL_ID, DIAGNOSIS, TREATMENT_HISTORY, ALLERGIES, CURRENT_MEDICATIONS, LAB_RESULTS)
SELECT 'R-00001', 'PT-00001', 'EMP-001', 'Hypertension', 'Prescribed medication and lifestyle changes.', 'None', 'Lisinopril', 'Blood pressure normal after medication.' FROM DUAL UNION ALL
SELECT 'R-00002', 'PT-00002', 'EMP-006', 'Appendicitis', 'Appendectomy performed.', 'None', 'Antibiotics, painkillers', 'Successful recovery.' FROM DUAL UNION ALL
SELECT 'R-00003', 'PT-00003', 'EMP-006', 'Fractured Tibia', 'Leg immobilized and pain management.', 'None', 'Painkillers', 'Bone healing well.' FROM DUAL UNION ALL
SELECT 'R-00004', 'PT-00004', 'EMP-007', 'Breast Cancer', 'Undergoing chemotherapy.', 'None', 'Chemotherapy drugs', 'Waiting for response to treatment.' FROM DUAL UNION ALL
SELECT 'R-00005', 'PT-00005', 'EMP-011', 'Spinal Injury', 'Surgery performed to stabilize spine.', 'None', 'Painkillers, muscle relaxants', 'Rehabilitation in progress.' FROM DUAL UNION ALL
SELECT 'R-00006', 'PT-00006', 'EMP-010', 'Pneumonia', 'Antibiotics and respiratory therapy.', 'Penicillin allergy', 'Azithromycin', 'Improving oxygen levels.' FROM DUAL UNION ALL
SELECT 'R-00007', 'PT-00007', 'EMP-012', 'Stroke', 'Rehabilitation therapy and medication.', 'None', 'Blood thinners', 'Improving mobility and speech.' FROM DUAL UNION ALL
SELECT 'R-00008', 'PT-00008', 'EMP-001', 'Asthma', 'Bronchodilators prescribed.', 'Dust allergy', 'Albuterol inhaler', 'Breathing improved after medication.' FROM DUAL UNION ALL
SELECT 'R-00009', 'PT-00009', 'EMP-006', 'Coronary Artery Disease', 'Undergoing angioplasty.', 'None', 'Aspirin, statins', 'Stent successfully placed.' FROM DUAL UNION ALL
SELECT 'R-00010', 'PT-00001', 'EMP-014', 'Heart Attack', 'Undergoing cardiac rehabilitation.', 'None', 'Beta-blockers, ACE inhibitors', 'Improving heart function.' FROM DUAL UNION ALL
SELECT 'R-00011', 'PT-00008', 'EMP-014', 'Heart Attack', 'Undergoing cardiac rehabilitation.', 'None', 'Beta-blockers, ACE inhibitors', 'Improving heart function.' FROM DUAL UNION ALL
SELECT 'R-00012', 'PT-00002', 'EMP-015', 'Diabetes', 'Insulin therapy and dietary changes.', 'None', 'Insulin', 'Stable blood sugar levels.' FROM DUAL;


INSERT INTO APPOINTMENT (APPOINTMENT_ID, APPOINTMENT_DATE, PURPOSE, APPOINTMENT_TIME, PATIENT_ID, EMPLOYEE_ID)
SELECT 'A-001', TO_DATE('2024-04-01','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('16:00:00', 'HH24:MI:SS'), 'PT-00001', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-002', TO_DATE('2024-04-02','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('10:00:00', 'HH24:MI:SS'), 'PT-00001', 'EMP-002' FROM DUAL UNION ALL
SELECT 'A-003', TO_DATE('2024-04-03','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('13:00:00', 'HH24:MI:SS'), 'PT-00001', 'EMP-009' FROM DUAL UNION ALL
SELECT 'A-004', TO_DATE('2024-04-03','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('14:00:00', 'HH24:MI:SS'), 'PT-00002', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-005', TO_DATE('2024-04-04','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('09:00:00', 'HH24:MI:SS'), 'PT-00003', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-006', TO_DATE('2024-04-05','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('15:00:00', 'HH24:MI:SS'), 'PT-00005', 'EMP-005' FROM DUAL UNION ALL
SELECT 'A-007', TO_DATE('2024-04-06','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('10:00:00', 'HH24:MI:SS'), 'PT-00006', 'EMP-006' FROM DUAL UNION ALL
SELECT 'A-008', TO_DATE('2024-04-07','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('11:00:00', 'HH24:MI:SS'), 'PT-00007', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-009', TO_DATE('2024-04-08','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('12:00:00', 'HH24:MI:SS'), 'PT-00008', 'EMP-008' FROM DUAL UNION ALL
SELECT 'A-010', TO_DATE('2024-04-09','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('13:00:00', 'HH24:MI:SS'), 'PT-00009', 'EMP-009' FROM DUAL UNION ALL
SELECT 'A-011', TO_DATE('2024-04-09','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('13:00:00', 'HH24:MI:SS'), 'PT-00002', 'EMP-009' FROM DUAL UNION ALL
SELECT 'A-012', TO_DATE('2024-04-17','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('14:00:00', 'HH24:MI:SS'), 'PT-00001', 'EMP-002' FROM DUAL UNION ALL
SELECT 'A-013', TO_DATE('2024-04-18','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('14:00:00', 'HH24:MI:SS'), 'PT-00010', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-014', TO_DATE('2024-04-19','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('14:00:00', 'HH24:MI:SS'), 'PT-00010', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-015', TO_DATE('2024-04-20','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('14:00:00', 'HH24:MI:SS'), 'PT-00010', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-016', TO_DATE('2024-04-21','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('14:00:00', 'HH24:MI:SS'), 'PT-00010', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-017', TO_DATE('2024-04-23','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('16:00:00', 'HH24:MI:SS'), 'PT-00001', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-018', TO_DATE('2024-04-24','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('15:00:00', 'HH24:MI:SS'), 'PT-00001', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-019', TO_DATE('2024-04-25','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('17:00:00', 'HH24:MI:SS'), 'PT-00001', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-020', TO_DATE('2024-04-26','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('12:00:00', 'HH24:MI:SS'), 'PT-00001', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-021', TO_DATE('2024-04-27','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('13:30:00', 'HH24:MI:SS'), 'PT-00001', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-022', TO_DATE('2024-04-28','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('18:15:00', 'HH24:MI:SS'), 'PT-00001', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-023', TO_DATE('2024-04-29','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('13:00:00', 'HH24:MI:SS'), 'PT-00001', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-024', TO_DATE('2024-04-30','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('17:00:00', 'HH24:MI:SS'), 'PT-00001', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-025', TO_DATE('2024-05-01','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('12:00:00', 'HH24:MI:SS'), 'PT-00001', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-026', TO_DATE('2024-05-02','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('14:00:00', 'HH24:MI:SS'), 'PT-00001', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-027', TO_DATE('2024-05-03','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('15:00:00', 'HH24:MI:SS'), 'PT-00001', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-028', TO_DATE('2024-05-04','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('14:00:00', 'HH24:MI:SS'), 'PT-00010', 'EMP-001' FROM DUAL UNION ALL

SELECT 'A-029', TO_DATE('2023-01-01','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('15:00:00', 'HH24:MI:SS'), 'PT-00007', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-030', TO_DATE('2023-01-02','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('15:00:00', 'HH24:MI:SS'), 'PT-00007', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-031', TO_DATE('2023-01-03','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('15:00:00', 'HH24:MI:SS'), 'PT-00007', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-032', TO_DATE('2023-01-04','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('15:00:00', 'HH24:MI:SS'), 'PT-00007', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-033', TO_DATE('2023-02-01','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('15:00:00', 'HH24:MI:SS'), 'PT-00007', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-034', TO_DATE('2023-02-02','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('15:00:00', 'HH24:MI:SS'), 'PT-00007', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-035', TO_DATE('2023-02-03','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('15:00:00', 'HH24:MI:SS'), 'PT-00007', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-036', TO_DATE('2023-02-04','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('15:00:00', 'HH24:MI:SS'), 'PT-00007', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-037', TO_DATE('2023-03-01','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('15:00:00', 'HH24:MI:SS'), 'PT-00007', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-038', TO_DATE('2023-03-02','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('15:00:00', 'HH24:MI:SS'), 'PT-00007', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-039', TO_DATE('2023-03-03','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('15:00:00', 'HH24:MI:SS'), 'PT-00007', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-040', TO_DATE('2023-03-04','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('15:00:00', 'HH24:MI:SS'), 'PT-00007', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-041', TO_DATE('2023-04-01','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('15:00:00', 'HH24:MI:SS'), 'PT-00007', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-042', TO_DATE('2023-04-02','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('15:00:00', 'HH24:MI:SS'), 'PT-00007', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-043', TO_DATE('2023-04-03','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('15:00:00', 'HH24:MI:SS'), 'PT-00007', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-044', TO_DATE('2023-04-04','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('15:00:00', 'HH24:MI:SS'), 'PT-00007', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-045', TO_DATE('2023-05-01','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('15:00:00', 'HH24:MI:SS'), 'PT-00007', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-046', TO_DATE('2023-05-02','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('15:00:00', 'HH24:MI:SS'), 'PT-00007', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-047', TO_DATE('2023-05-03','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('15:00:00', 'HH24:MI:SS'), 'PT-00007', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-048', TO_DATE('2023-05-04','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('15:00:00', 'HH24:MI:SS'), 'PT-00007', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-049', TO_DATE('2023-06-01','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('15:00:00', 'HH24:MI:SS'), 'PT-00007', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-050', TO_DATE('2023-06-02','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('15:00:00', 'HH24:MI:SS'), 'PT-00007', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-051', TO_DATE('2023-06-03','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('15:00:00', 'HH24:MI:SS'), 'PT-00007', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-052', TO_DATE('2023-06-04','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('15:00:00', 'HH24:MI:SS'), 'PT-00007', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-053', TO_DATE('2023-07-01','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('15:00:00', 'HH24:MI:SS'), 'PT-00007', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-054', TO_DATE('2023-07-02','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('15:00:00', 'HH24:MI:SS'), 'PT-00007', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-055', TO_DATE('2023-07-03','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('15:00:00', 'HH24:MI:SS'), 'PT-00007', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-056', TO_DATE('2023-07-04','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('15:00:00', 'HH24:MI:SS'), 'PT-00007', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-057', TO_DATE('2023-08-01','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('15:00:00', 'HH24:MI:SS'), 'PT-00007', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-058', TO_DATE('2023-08-02','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('15:00:00', 'HH24:MI:SS'), 'PT-00007', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-059', TO_DATE('2023-08-03','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('15:00:00', 'HH24:MI:SS'), 'PT-00007', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-060', TO_DATE('2023-08-04','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('15:00:00', 'HH24:MI:SS'), 'PT-00007', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-061', TO_DATE('2023-09-01','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('15:00:00', 'HH24:MI:SS'), 'PT-00007', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-062', TO_DATE('2023-09-02','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('15:00:00', 'HH24:MI:SS'), 'PT-00007', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-063', TO_DATE('2023-09-03','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('15:00:00', 'HH24:MI:SS'), 'PT-00007', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-064', TO_DATE('2023-09-04','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('15:00:00', 'HH24:MI:SS'), 'PT-00007', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-065', TO_DATE('2023-10-01','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('15:00:00', 'HH24:MI:SS'), 'PT-00007', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-066', TO_DATE('2023-10-02','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('15:00:00', 'HH24:MI:SS'), 'PT-00007', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-067', TO_DATE('2023-10-03','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('15:00:00', 'HH24:MI:SS'), 'PT-00007', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-068', TO_DATE('2023-10-04','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('15:00:00', 'HH24:MI:SS'), 'PT-00007', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-069', TO_DATE('2023-11-01','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('15:00:00', 'HH24:MI:SS'), 'PT-00007', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-070', TO_DATE('2023-11-02','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('15:00:00', 'HH24:MI:SS'), 'PT-00007', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-071', TO_DATE('2023-11-03','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('15:00:00', 'HH24:MI:SS'), 'PT-00007', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-072', TO_DATE('2023-11-04','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('15:00:00', 'HH24:MI:SS'), 'PT-00007', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-073', TO_DATE('2023-12-01','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('15:00:00', 'HH24:MI:SS'), 'PT-00007', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-074', TO_DATE('2023-12-02','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('15:00:00', 'HH24:MI:SS'), 'PT-00007', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-075', TO_DATE('2023-12-03','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('15:00:00', 'HH24:MI:SS'), 'PT-00007', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-076', TO_DATE('2023-12-04','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('15:00:00', 'HH24:MI:SS'), 'PT-00007', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-077', TO_DATE('2024-01-01','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('15:00:00', 'HH24:MI:SS'), 'PT-00007', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-078', TO_DATE('2024-01-02','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('15:00:00', 'HH24:MI:SS'), 'PT-00007', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-079', TO_DATE('2024-01-03','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('15:00:00', 'HH24:MI:SS'), 'PT-00007', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-080', TO_DATE('2024-01-04','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('15:00:00', 'HH24:MI:SS'), 'PT-00007', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-081', TO_DATE('2024-02-01','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('15:00:00', 'HH24:MI:SS'), 'PT-00007', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-082', TO_DATE('2024-02-02','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('15:00:00', 'HH24:MI:SS'), 'PT-00007', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-083', TO_DATE('2024-02-03','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('15:00:00', 'HH24:MI:SS'), 'PT-00007', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-084', TO_DATE('2024-02-04','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('15:00:00', 'HH24:MI:SS'), 'PT-00007', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-085', TO_DATE('2024-03-01','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('15:00:00', 'HH24:MI:SS'), 'PT-00007', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-086', TO_DATE('2024-03-02','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('15:00:00', 'HH24:MI:SS'), 'PT-00007', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-087', TO_DATE('2024-03-03','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('15:00:00', 'HH24:MI:SS'), 'PT-00007', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-088', TO_DATE('2024-03-04','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('15:00:00', 'HH24:MI:SS'), 'PT-00007', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-089', TO_DATE('2024-04-01','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('15:00:00', 'HH24:MI:SS'), 'PT-00007', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-090', TO_DATE('2024-04-02','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('15:00:00', 'HH24:MI:SS'), 'PT-00007', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-091', TO_DATE('2024-04-03','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('15:00:00', 'HH24:MI:SS'), 'PT-00007', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-092', TO_DATE('2024-04-04','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('15:00:00', 'HH24:MI:SS'), 'PT-00007', 'EMP-001' FROM DUAL UNION ALL
SELECT 'A-093', TO_DATE('2024-05-01','YYYY-MM-DD'), 'Checkup', TO_TIMESTAMP('15:00:00', 'HH24:MI:SS'), 'PT-00007', 'EMP-001' FROM DUAL;

INSERT INTO BILL (BILLING_ID, BILL_DATE, ITEMIZED_COSTS, TOTAL_COST, PAYMENT_METHOD, PATIENT_ID)
SELECT 'B-001', TO_DATE('2024-05-01','YYYY-MM-DD'), 'X-Ray - $200', 200.00, 'Cash', 'PT-00001' FROM DUAL UNION ALL
SELECT 'B-002', TO_DATE('2024-05-02','YYYY-MM-DD'), 'Blood Test - $100', 100.00, 'Credit Card', 'PT-00002' FROM DUAL UNION ALL
SELECT 'B-003', TO_DATE('2024-05-03','YYYY-MM-DD'), 'MRI Scan - $1000', 1000.00, 'Debit Card', 'PT-00003' FROM DUAL UNION ALL
SELECT 'B-004', TO_DATE('2024-05-04','YYYY-MM-DD'), 'Ultrasound - $300', 300.00, 'Cash', 'PT-00004' FROM DUAL UNION ALL
SELECT 'B-005', TO_DATE('2024-05-05','YYYY-MM-DD'), 'EKG - $250', 250.00, 'Credit Card', 'PT-00005' FROM DUAL UNION ALL
SELECT 'B-006', TO_DATE('2024-05-06','YYYY-MM-DD'), 'Physical Therapy - $150', 150.00, 'Debit Card', 'PT-00006' FROM DUAL UNION ALL
SELECT 'B-007', TO_DATE('2024-05-07','YYYY-MM-DD'), 'Surgery - $5000', 5000.00, 'Cash', 'PT-00007' FROM DUAL UNION ALL
SELECT 'B-008', TO_DATE('2024-05-08','YYYY-MM-DD'), 'Prescription Medication - $50', 50.00, 'Credit Card', 'PT-00008' FROM DUAL UNION ALL
SELECT 'B-009', TO_DATE('2024-05-09','YYYY-MM-DD'), 'Dental Cleaning - $75', 75.00, 'Debit Card', 'PT-00009' FROM DUAL UNION ALL
SELECT 'B-010', TO_DATE('2024-05-10','YYYY-MM-DD'), 'Eye Exam - $100', 100.00, 'Cash', 'PT-00009' FROM DUAL;

INSERT INTO TREATMENT (
    TREATMENT_ID, START_DATE, END_DATE, DESCRIPTION, OUTCOME, PATIENT_ID, PHARMACY_ID, HEALTHCARE_PROFESSIONAL_ID
)
SELECT 
    'T-001', DATE '2024-04-01', DATE '2024-04-10', 'Medication: Acetaminophen, 500 mg every 6 hours||Treatment Description: Administered symptomatic relief medications and advised rest.||Follow-up Plan: Return if symptoms worsen.', 'Patient recovered', 'PT-00001', 'PH-001', 'EMP-001' 
FROM DUAL UNION ALL
SELECT 
    'T-002', DATE '2024-04-02', DATE '2024-04-11', 'Medication: Metformin, 500 mg twice daily||Treatment Description: Initiated lifestyle changes and medication for blood sugar control.||Follow-up Plan: Regular monitoring of blood sugar levels.', 'Blood sugar levels stabilized', 'PT-00002', 'PH-002', 'EMP-002' 
FROM DUAL UNION ALL
SELECT 
    'T-003', DATE '2024-04-03', DATE '2024-04-12', 'Medication: Lisinopril, 10 mg daily||Treatment Description: Prescribed blood pressure medications and dietary advice.||Follow-up Plan: Monthly blood pressure check-ups.', 'Blood pressure levels normalized', 'PT-00003', 'PH-003', 'EMP-003' 
FROM DUAL UNION ALL
SELECT 
    'T-004', DATE '2024-04-04', DATE '2024-04-13', 'Medication: Albuterol inhaler as needed||Treatment Description: Provided inhalers and respiratory therapy.||Follow-up Plan: Regular asthma review appointments.', 'Breathing improved', 'PT-00004', 'PH-004', 'EMP-004' 
FROM DUAL UNION ALL
SELECT 
    'T-005', DATE '2024-04-05', DATE '2024-04-14', 'Medication: Calcium supplements, 600 mg daily||Treatment Description: Administered medication to improve bone density.||Follow-up Plan: Bone density test after 6 months.', 'Bone density improved', 'PT-00005', 'PH-002', 'EMP-005' 
FROM DUAL UNION ALL
SELECT 
    'T-006', DATE '2024-04-06', DATE '2024-04-15', 'Medication: Ibuprofen, 400 mg three times a day||Treatment Description: Applied joint therapies and anti-inflammatory medications.||Follow-up Plan: Evaluation every two weeks.', 'Joint pain reduced', 'PT-00006', 'PH-001', 'EMP-006' 
FROM DUAL UNION ALL
SELECT 
    'T-007', DATE '2024-04-07', DATE '2024-04-16', 'Medication: Statins, 20 mg daily||Treatment Description: Cardiovascular medication prescribed along with lifestyle advice.||Follow-up Plan: Cardiology follow-up every three months.', 'Heart function improved', 'PT-00007', 'PH-001', 'EMP-007' 
FROM DUAL UNION ALL
SELECT 
    'T-008', DATE '2024-04-08', DATE '2024-04-17', 'Medication: Sertraline, 50 mg daily||Treatment Description: Provided antidepressant medication and psychotherapy.||Follow-up Plan: Bi-weekly psychotherapy sessions.', 'Mood improved', 'PT-00008', 'PH-001', 'EMP-008' 
FROM DUAL UNION ALL
SELECT 
    'T-009', DATE '2024-04-09', DATE '2024-04-18', 'Medication: Diazepam, as needed for anxiety||Treatment Description: Anxiety management with medication and cognitive therapy.||Follow-up Plan: Regular counseling sessions.', 'Anxiety levels reduced', 'PT-00009', 'PH-001', 'EMP-009' 
FROM DUAL UNION ALL
SELECT 
    'T-010', DATE '2024-04-09', DATE '2024-04-18', 'Medication: Lisinopril, 10 mg daily||Treatment Description: Prescribed blood pressure medications and dietary advice.||Follow-up Plan: Monthly blood pressure check-ups.', 'Blood pressure levels normalized', 'PT-00005', 'PH-003', 'EMP-003' 
FROM DUAL UNION ALL
SELECT 
    'T-011', DATE '2024-04-09', DATE '2024-04-18', 'Medication: Lisinopril, 10 mg daily||Treatment Description: Prescribed blood pressure medications and dietary advice.||Follow-up Plan: Monthly blood pressure check-ups.', 'Blood pressure levels normalized', 'PT-00005', 'PH-003', 'EMP-003' 
FROM DUAL UNION ALL
SELECT 
    'T-012', DATE '2024-04-09', DATE '2024-04-18', 'Medication: Lisinopril, 10 mg daily||Treatment Description: Prescribed blood pressure medications and dietary advice.||Follow-up Plan: Monthly blood pressure check-ups.', 'Blood pressure levels normalized', 'PT-00005', 'PH-003', 'EMP-003' 
FROM DUAL UNION ALL
SELECT 
    'T-013', DATE '2024-04-09', DATE '2024-04-18', 'Medication: Lisinopril, 10 mg daily||Treatment Description: Prescribed blood pressure medications and dietary advice.||Follow-up Plan: Monthly blood pressure check-ups.', 'Blood pressure levels normalized', 'PT-00005', 'PH-003', 'EMP-003' 
FROM DUAL UNION ALL
SELECT 
    'T-014', DATE '2024-04-09', DATE '2024-04-18', 'Medication: Lisinopril, 10 mg daily||Treatment Description: Prescribed blood pressure medications and dietary advice.||Follow-up Plan: Monthly blood pressure check-ups.', 'Blood pressure levels normalized', 'PT-00005', 'PH-003', 'EMP-003' 
FROM DUAL UNION ALL
SELECT 
    'T-015', DATE '2024-04-09', DATE '2024-04-18', 'Medication: Lisinopril, 10 mg daily||Treatment Description: Prescribed blood pressure medications and dietary advice.||Follow-up Plan: Monthly blood pressure check-ups.', 'Blood pressure levels normalized', 'PT-00005', 'PH-003', 'EMP-003' 
FROM DUAL UNION ALL
SELECT 
    'T-016', DATE '2024-04-09', DATE '2024-04-18', 'Medication: Lisinopril, 10 mg daily||Treatment Description: Prescribed blood pressure medications and dietary advice.||Follow-up Plan: Monthly blood pressure check-ups.', 'Blood pressure levels normalized', 'PT-00005', 'PH-003', 'EMP-003' 
FROM DUAL UNION ALL
SELECT 
    'T-017', DATE '2024-04-09', DATE '2024-04-18', 'Medication: Lisinopril, 10 mg daily||Treatment Description: Prescribed blood pressure medications and dietary advice.||Follow-up Plan: Monthly blood pressure check-ups.', 'Blood pressure levels normalized', 'PT-00005', 'PH-003', 'EMP-003' 
FROM DUAL UNION ALL
SELECT 
    'T-018', DATE '2024-04-10', DATE '2024-04-19', 'Medication: Sumatriptan, 50 mg as needed||Treatment Description: Migraine treatment with prescribed medications and lifestyle adjustments.||Follow-up Plan: Neurology check-up if migraines persist.', 'Frequency of migraines reduced', 'PT-00009', 'PH-001', 'EMP-009' 
FROM DUAL;


INSERT INTO INSURANCE (INSURANCE_ID, COMPANY_NAME, BILL_AMOUNT)
SELECT 'I-001', 'ShieldMark Assurance', 2000.00 FROM DUAL UNION ALL
SELECT 'I-002', 'EverTrust Mutual', 3500.00 FROM DUAL UNION ALL
SELECT 'I-003', 'Safeguard Elite Insurance', 1750.00 FROM DUAL;

CREATE OR REPLACE VIEW VIP_PATIENT_VIEW AS
SELECT P.FIRST_NAME, P.LAST_NAME, PT.ENROLLMENT_DATE
FROM PATIENT PT
JOIN PERSON P ON PT.PERSON_ID = P.PERSON_ID
WHERE PT.PATIENT_ID IN (
  SELECT A.PATIENT_ID
  FROM APPOINTMENT A
  WHERE A.APPOINTMENT_DATE BETWEEN ADD_MONTHS(SYSDATE, -1) AND SYSDATE
  GROUP BY A.PATIENT_ID
  HAVING COUNT(*) > 3
);

CREATE OR REPLACE VIEW Preferred_Healthcare_Professional_View AS
SELECT P.FIRST_NAME, P.LAST_NAME, COUNT(*) AS Interaction_Count
FROM APPOINTMENT A
JOIN HEALTHCARE_PROFESSIONAL HP ON A.EMPLOYEE_ID = HP.EMPLOYEE_ID
JOIN PERSON P ON HP.PERSON_ID = P.PERSON_ID
WHERE A.APPOINTMENT_DATE BETWEEN ADD_MONTHS(SYSDATE, -2) AND SYSDATE
GROUP BY P.FIRST_NAME, P.LAST_NAME
ORDER BY Interaction_Count DESC;

CREATE OR REPLACE VIEW Potential_VIP_Patient_View AS
SELECT P.FIRST_NAME, P.LAST_NAME, PN.PHONE_NUMBER, PT.PATIENT_ID
FROM PATIENT PT
JOIN PERSON P ON PT.PERSON_ID = P.PERSON_ID
JOIN PERSON_PHONE_NUMBER PN ON PT.PERSON_ID = PN.PERSON_ID
WHERE PT.PATIENT_ID IN (
  SELECT A.PATIENT_ID
  FROM APPOINTMENT A
  WHERE A.APPOINTMENT_DATE BETWEEN ADD_MONTHS(SYSDATE, -2) AND SYSDATE
  GROUP BY A.PATIENT_ID
  HAVING COUNT(*) BETWEEN 2 AND 3
);

-- Modify the column to INT
ALTER TABLE HEALTHCARE_PROFESSIONAL MODIFY (YEARS_OF_EXPERIENCE INT);
CREATE OR REPLACE TRIGGER check_age_before_insert
BEFORE INSERT ON HEALTHCARE_PROFESSIONAL
FOR EACH ROW
DECLARE
    person_dob DATE;
    person_age NUMBER(3);
BEGIN
    IF :NEW.PERSON_ID IS NOT NULL THEN
        SELECT DATE_OF_BIRTH INTO person_dob FROM PERSON WHERE PERSON_ID = :NEW.PERSON_ID;

        IF person_dob IS NOT NULL THEN
            person_age := FLOOR(MONTHS_BETWEEN(SYSDATE, person_dob) / 12);

            IF person_age < 18 THEN
                RAISE_APPLICATION_ERROR(-20003, 'The person must be at least 18 years old to be a healthcare professional.');
            END IF;

            IF :NEW.YEARS_OF_EXPERIENCE < 0 THEN
                RAISE_APPLICATION_ERROR(-20001, 'The years of experience cannot be negative.');
            END IF;

            IF person_age < :NEW.YEARS_OF_EXPERIENCE THEN
                RAISE_APPLICATION_ERROR(-20002, 'The person cannot have more experience than their age.');
            END IF;
        END IF;
    END IF;
END;
/

create or replace TRIGGER CHK_YEARS_OF_EXPERIENCE
BEFORE INSERT OR UPDATE ON HEALTHCARE_PROFESSIONAL
FOR EACH ROW
DECLARE
    person_age NUMBER(3);
BEGIN
    -- Calculate the age of the person
    SELECT FLOOR(MONTHS_BETWEEN(SYSDATE, (SELECT DATE_OF_BIRTH FROM PERSON WHERE PERSON_ID = :NEW.PERSON_ID)) / 12)
    INTO person_age
    FROM DUAL;
    -- Check if years of experience is within a valid range
    IF :NEW.YEARS_OF_EXPERIENCE < 0 OR :NEW.YEARS_OF_EXPERIENCE > person_age THEN
        RAISE_APPLICATION_ERROR(-20001, 'Years of experience must be greater than or equal to 0 and less than or equal to the person''s age.');
    END IF;
END;
/

UPDATE HEALTHCARE_PROFESSIONAL
SET HIRE_DATE = 
    CASE 
        WHEN EMPLOYEE_ID = 'EMP-001' THEN TO_DATE('2023-04-28', 'YYYY-MM-DD')
        WHEN EMPLOYEE_ID = 'EMP-002' THEN TO_DATE('2023-04-25', 'YYYY-MM-DD')
        WHEN EMPLOYEE_ID = 'EMP-003' THEN TO_DATE('2023-04-22', 'YYYY-MM-DD')
        WHEN EMPLOYEE_ID = 'EMP-004' THEN TO_DATE('2023-04-20', 'YYYY-MM-DD')
        WHEN EMPLOYEE_ID = 'EMP-005' THEN TO_DATE('2023-04-18', 'YYYY-MM-DD')
        WHEN EMPLOYEE_ID = 'EMP-006' THEN TO_DATE('2023-04-15', 'YYYY-MM-DD')
        WHEN EMPLOYEE_ID = 'EMP-007' THEN TO_DATE('2023-04-10', 'YYYY-MM-DD')
        WHEN EMPLOYEE_ID = 'EMP-008' THEN TO_DATE('2023-04-05', 'YYYY-MM-DD')
        WHEN EMPLOYEE_ID = 'EMP-009' THEN TO_DATE('2023-04-01', 'YYYY-MM-DD')
        WHEN EMPLOYEE_ID = 'EMP-010' THEN TO_DATE('2023-03-28', 'YYYY-MM-DD')
        WHEN EMPLOYEE_ID = 'EMP-011' THEN TO_DATE('2023-03-25', 'YYYY-MM-DD')
        WHEN EMPLOYEE_ID = 'EMP-012' THEN TO_DATE('2023-03-20', 'YYYY-MM-DD')
        WHEN EMPLOYEE_ID = 'EMP-013' THEN TO_DATE('2023-03-15', 'YYYY-MM-DD')
        WHEN EMPLOYEE_ID = 'EMP-014' THEN TO_DATE('2023-03-10', 'YYYY-MM-DD')
        WHEN EMPLOYEE_ID = 'EMP-015' THEN TO_DATE('2023-03-05', 'YYYY-MM-DD')
		WHEN EMPLOYEE_ID = 'EMP-016' THEN TO_DATE('2024-04-01', 'YYYY-MM-DD')
    END;
/

--3:Create Critical Treatment View
CREATE OR REPLACE VIEW Critical_Treatment_View AS  
  SELECT 
    TO_CHAR(DESCRIPTION) AS DESCRIPTION,
    COUNT(*) AS Administered_Count
FROM 
    TREATMENT
WHERE 
   START_DATE >= TRUNC(SYSDATE, 'MM') - INTERVAL '1' MONTH
GROUP BY 
    TO_CHAR(DESCRIPTION)
HAVING 
    COUNT(*) > 5;

--5: Create Top Staff View
CREATE OR REPLACE VIEW Top_Staff_View AS
SELECT 'Appointment' AS Process_Type, 
       EMPLOYEE_ID, 
       COUNT(*) AS Processed_Count
FROM APPOINTMENT
WHERE APPOINTMENT_DATE >= TRUNC(SYSDATE, 'MM') - INTERVAL '1' MONTH
GROUP BY EMPLOYEE_ID
UNION ALL
SELECT 'Treatment' AS Process_Type,
       HEALTHCARE_PROFESSIONAL_ID AS EMPLOYEE_ID,
       COUNT(*) AS Processed_Count
FROM TREATMENT
WHERE START_DATE >= TRUNC(SYSDATE, 'MM') - INTERVAL '1' MONTH
GROUP BY HEALTHCARE_PROFESSIONAL_ID
ORDER BY Processed_Count DESC
FETCH FIRST 1 ROW ONLY;
