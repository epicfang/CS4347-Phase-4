//Query 1, List all healthcare professionals by their specialization
SELECT EMPLOYEE_ID, SPECIALIZATION
FROM HEALTHCARE_PROFESSIONAL;

//Query 2, Find the names of healthcare professionals who are also patients
SELECT per.FIRST_NAME, per.LAST_NAME
FROM HEALTHCARE_PROFESSIONAL hp
JOIN PATIENT p ON hp.PERSON_ID = p.PERSON_ID
JOIN PERSON per ON per.PERSON_ID = hp.PERSON_ID

//Query 3, Calculate the average number of visits by the top 5 VIP patients.
SELECT AVG(VISIT_COUNT) AS AVG_VISITS
FROM (
  SELECT PATIENT_ID, COUNT(*) AS VISIT_COUNT
  FROM APPOINTMENT
  WHERE APPOINTMENT_DATE > ADD_MONTHS(CURRENT_DATE, -1)
  GROUP BY PATIENT_ID
  ORDER BY VISIT_COUNT DESC
  FETCH FIRST 5 ROWS ONLY
);

//Query 4, Assuming highest number of appointments = highest rating, Identify the healthcare professional with the highest patient satisfaction ratings.
SELECT HP.EMPLOYEE_ID, P.FIRST_NAME, P.LAST_NAME, COUNT(*) AS Appointment_Count
FROM HEALTHCARE_PROFESSIONAL HP
JOIN APPOINTMENT A ON HP.EMPLOYEE_ID = A.EMPLOYEE_ID
JOIN PERSON P ON HP.PERSON_ID = P.PERSON_ID
GROUP BY HP.EMPLOYEE_ID, P.FIRST_NAME, P.LAST_NAME
ORDER BY Appointment_Count DESC
FETCH FIRST 1 ROW ONLY;

//Query 5, Determine the medication with the highest number ob prescriptions in the past month.
WITH MedicationCounts AS (
    SELECT
        TRIM(DBMS_LOB.SUBSTR(DESCRIPTION, DBMS_LOB.INSTR(DESCRIPTION, '||') - (DBMS_LOB.INSTR(DESCRIPTION, 'Medication:') + 11), DBMS_LOB.INSTR(DESCRIPTION, 'Medication:') + 11)) AS Medication,
        COUNT(*) AS TotalCount
    FROM TREATMENT
    WHERE START_DATE BETWEEN ADD_MONTHS(SYSDATE, -1) AND SYSDATE
    GROUP BY TRIM(DBMS_LOB.SUBSTR(DESCRIPTION, DBMS_LOB.INSTR(DESCRIPTION, '||') - (DBMS_LOB.INSTR(DESCRIPTION, 'Medication:') + 11), DBMS_LOB.INSTR(DESCRIPTION, 'Medication:') + 11))
)
SELECT Medication, TotalCount
FROM MedicationCounts
ORDER BY TotalCount DESC
FETCH FIRST 1 ROW ONLY;


//Query 6, Summarize the total treatements administered by each department
SELECT HP.DEPARTMENT, COUNT(T.TREATMENT_ID) AS Total_Treatments
FROM HEALTHCARE_PROFESSIONAL HP
JOIN TREATMENT T ON HP.EMPLOYEE_ID = T.HEALTHCARE_PROFESSIONAL_ID
GROUP BY HP.DEPARTMENT
ORDER BY Total_Treatments DESC;

//Query 7 Emp1 works every day from April 23rd until May 4th.
SELECT HP.EMPLOYEE_ID, P.FIRST_NAME, P.LAST_NAME, HP.DEPARTMENT
FROM HEALTHCARE_PROFESSIONAL HP
JOIN PERSON P ON HP.PERSON_ID = P.PERSON_ID
JOIN APPOINTMENT A ON HP.EMPLOYEE_ID = A.EMPLOYEE_ID
WHERE A.APPOINTMENT_DATE BETWEEN TRUNC(SYSDATE - 7) AND TRUNC(SYSDATE - 1)
GROUP BY HP.EMPLOYEE_ID, P.FIRST_NAME, P.LAST_NAME, HP.DEPARTMENT
HAVING COUNT(DISTINCT TRUNC(A.APPOINTMENT_DATE)) = 7;

//Query 8 Emp1, most popular healthcare_professional, has 5 unique patients
WITH MostAppointments AS (
    SELECT EMPLOYEE_ID
    FROM APPOINTMENT
    GROUP BY EMPLOYEE_ID
    ORDER BY COUNT(*) DESC
    FETCH FIRST 1 ROW ONLY
)

//Query 9, Retrieve all medical records created after the most recent healthcare professional was hired.
SELECT *
FROM MEDICAL_RECORD
WHERE HEALTHCARE_PROFESSIONAL_ID IN (
    SELECT EMPLOYEE_ID
    FROM HEALTHCARE_PROFESSIONAL
    WHERE HIRE_DATE = (SELECT MAX(HIRE_DATE) FROM HEALTHCARE_PROFESSIONAL)
);

//Query 10, List all staff who have been registered as VIP patients within a month of their employment.
SELECT H.EMPLOYEE_ID, H.PERSON_ID, P.FIRST_NAME, P.LAST_NAME, H.HIRE_DATE
FROM HEALTHCARE_PROFESSIONAL H
JOIN PERSON P ON H.PERSON_ID = P.PERSON_ID
WHERE EXISTS (
  SELECT 1
  FROM PATIENT PT
  JOIN APPOINTMENT A ON PT.PATIENT_ID = A.PATIENT_ID
  WHERE PT.PERSON_ID = H.PERSON_ID
	AND A.APPOINTMENT_DATE BETWEEN H.HIRE_DATE AND ADD_MONTHS(H.HIRE_DATE, 1)
  GROUP BY PT.PATIENT_ID
  HAVING COUNT(A.APPOINTMENT_ID) > 3
);

//Query 11, Identify the department with the highest number of unique patient visits.
SELECT 
    HP.DEPARTMENT,
    COUNT(DISTINCT A.PATIENT_ID) AS Unique_Patient_Visits
FROM 
    APPOINTMENT A
JOIN 
    HEALTHCARE_PROFESSIONAL HP ON A.EMPLOYEE_ID = HP.EMPLOYEE_ID
GROUP BY 
    HP.DEPARTMENT
ORDER BY 
    Unique_Patient_Visits DESC
FETCH FIRST ROW ONLY;

//Query 12, Find all patients who have been VIP continuously for over a year.
SELECT PATIENT_ID
FROM (
  SELECT PATIENT_ID, EXTRACT(YEAR FROM APPOINTMENT_DATE) AS YEAR, EXTRACT(MONTH FROM APPOINTMENT_DATE) AS MONTH, COUNT(APPOINTMENT_ID) AS APPOINTMENTS
  FROM APPOINTMENT
  GROUP BY PATIENT_ID, EXTRACT(YEAR FROM APPOINTMENT_DATE), EXTRACT(MONTH FROM APPOINTMENT_DATE)
  HAVING COUNT(APPOINTMENT_ID) >= 4
) MONTHLY_APPOINTMENTS
GROUP BY PATIENT_ID
HAVING COUNT(*) >= 12;


//Query 13, Retrieve all appointment details made by potential VIP patients in the last year.
SELECT A.APPOINTMENT_ID, A.APPOINTMENT_DATE, A.PURPOSE, A.APPOINTMENT_TIME, A.PATIENT_ID, A.EMPLOYEE_ID
FROM APPOINTMENT A
JOIN Potential_VIP_Patient_View V ON A.PATIENT_ID = V.PATIENT_ID
WHERE A.APPOINTMENT_DATE BETWEEN ADD_MONTHS(SYSDATE, -12) AND SYSDATE;
